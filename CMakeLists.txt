SC_BEGIN_PACKAGE(TRUNK)

SET(PROJECT_TEST_DATA_DIR ${CMAKE_CURRENT_SOURCE_DIR}/test/data)

IF(CMAKE_COMPILER_IS_GNUCC)
#	SET(CMAKE_CXX_FLAGS  "${CMAKE_CXX_FLAGS} -Wall -Wextra")
	IF(GCC_VERSION VERSION_LESS "4.7")
		MESSAGE(FATAL_ERROR "GCC version ${GCC_VERSION} found but 4.7 required as minimum")
	ENDIF()
ENDIF()

#SET(Boost_DEBUG ON)

# Static Boost libs are not compiled with -fPIC on some
# systems so linking into a 64bit shared library does not work.
# Disabled it so far.
#SET(Boost_USE_STATIC_LIBS ON)
SET(Boost_DETAILED_FAILURE_MSG ON)
FIND_PACKAGE(Boost REQUIRED COMPONENTS program_options thread filesystem iostreams regex)
FIND_PACKAGE(OpenSSL REQUIRED)
IF (WIN32)
	ADD_DEFINITIONS("-DBOOST_ALL_NO_LIB")
	ADD_DEFINITIONS("-DBOOST_LIB_DIAGNOSTIC")
ENDIF (WIN32)

LINK_DIRECTORIES(${Boost_LIBRARY_DIRS})
INCLUDE_DIRECTORIES(${Boost_INCLUDE_DIRS})

INCLUDE_DIRECTORIES(${CMAKE_CURRENT_SOURCE_DIR}/libs)
INCLUDE_DIRECTORIES(${CMAKE_CURRENT_BINARY_DIR}/libs)

INCLUDE_DIRECTORIES(${CMAKE_CURRENT_SOURCE_DIR}/../../base/common/libs)
INCLUDE_DIRECTORIES(${CMAKE_CURRENT_BINARY_DIR}/../../base/common/libs)


SUBDIRS(apps libs)
